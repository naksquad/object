//------------------------- On Load

author = BACONMOP edt NAK;					// Visible when loading mission
onLoadName = "Invade & Annex  NAK Altis";						// Visible when loading mission
OnLoadMission = "Welcome back to <t color='#ff9900'>NAK</t> , join us at <t color='#ff9900'>WWW.NAKSQUAD.NET</t> and <t color='#ff9900'>TS3.NAKSQUAD.NET</t>";
loadScreen = "Media\images\loading.jpg";				// Visible when loading mission
overviewPicture = "Media\images\loading.jpg";			// Visible when selecting mission

onLoadIntro = "";										// Displays a message while the intro is loading.
onLoadIntroTime = 0;									// Time and date displayed while the intro loads. 1 visible, 0 hidden.
onLoadMissionTime = 0;									// Time and date displayed while the mission loads. 1 visible, 0 hidden.

class Header
	{
		gameType = COOP;								// Unknown, COOP, DM, TDM, CTF, SC, CTI, RPG, Sandbox, Seize, Defend.
		minPlayers = 1;									// Min # of players the MISSION supports
		maxPlayers = 70;								// Max # of players the MISSION supports, not server slots. Make sure # is greater than server slots.
	};

//------------------------- Admin

enableDebugConsole = 0;									// 0 = disabled. 1 = admins, 2 = everybody. 0 is recommended in MP.
allowFunctionsLog = 0; 									// Log functions to .rpt. disabled with 0
allowFunctionsRecompile = 0;
onPauseScript = "scripts\onPause.sqf";


//------------------------- Misc

disableChannels[] = {{0,false,true},{1,false,true},{2,false,true},{6,true,true}};									// 0 = Global, 1 = Side, 2 = Command, 3 = Group, 4 = Vehicle, 5 = Direct, 6 = System. Admin/server/BattlEye can still use Global.
disabledAI = 1;											// No AI in playable units
aiKills = 0; 											// disable scorelist for AI players
enableItemsDropping = 0; 								// disabled with 0
joinUnassigned = 1;										// 0 = players forced into role on join
showUAVFeed = 1;										// Enables/Disables the UAV Feed. Zeus-related.
rtdOn = difficultyEnabledRTD;	



//--- Respawn
respawn = 3;		// 0 = NONE. 1 = BIRD. 2 = INSTANT. 3 = BASE. 4 = GROUP. 5 = SIDE.
respawnDelay = 15;
RespawnDialog = 1;		// default = 1. show respawn timer and scoreboard when killed.
respawnTemplates[] = {"MenuInventory", "MenuPosition"};		// "Seagull", "f_spectator", "f_JIP", "MenuInventory", "MenuPosition", "Tickets", "EndMission", "Counter", "Wave"
respawnButton = 1;
respawnOnStart = -1;

//--- Revive
ReviveMode = 1;                         //0: disabled, 1: enabled, 2: controlled by player attributes
ReviveUnconsciousStateMode = 0;         //0: basic, 1: advanced, 2: realistic
ReviveRequiredTrait = 0;                //0: none, 1: medic trait is required
ReviveRequiredItems = 0;                //0: none, 1: medkit, 2: medkit or first aid kit
ReviveRequiredItemsFakConsumed = 0;     //0: first aid kit is not consumed upon revive, 1: first aid kit is consumed
ReviveDelay = 6;                        //time needed to revive someone (in secs)
ReviveMedicSpeedMultiplier = 2;         //speed multiplier for revive performed by medic
ReviveForceRespawnDelay = 3;            //time needed to perform force respawn (in secs)
ReviveBleedOutDelay = 180;              //unconscious state duration (in secs

//------------------------- Garbage collector

corpseManagerMode = 1; //Type of removed bodies: 0 - none, 1 - all, 2 - only respawnable, 3 - only non-respawnable 
corpseLimit = 5; //Max number of bodies which can be available at the same time. When exceeded, start deleting immediately. 
corpseRemovalMinTime = 10; //Minimal time in seconds a body stays in the scene (can't be removed sooner). 
corpseRemovalMaxTime = 60; //Maximal time in seconds after which a dead body is removed (can't stay longer) 

wreckManagerMode = 1; //Type of removed wrecks: 0 - none, 1 - all, 2 - only respawnable, 3 - only non-respawnable 
wreckLimit = 2; //Max number of wrecks which can be available at the same time. When exceeded, start deleting immediately. 
wreckRemovalMinTime = 10; //Minimal time in seconds a wreck stays in the scene (can't be removed sooner). 
wreckRemovalMaxTime = 60; //Maximal time in seconds after which a wreck is removed (can't stay longer)

//------------------------- Includes
#include "R3F_LOG\desc_include.h"
#include "functions\CHVD\dialog.hpp"					// CHVD View Distance script
#include "ATM_airdrop\dialog.hpp"


class unitList
	{
		#include "defines\units.hpp"
	};

class CfgFunctions
	{
		#include "functions\cfgfunctions.hpp"					// Integrated I&A functions
		//#include "\nasty\cfgfunctions.hpp"
	};

class CfgNotifications
	{
		#include "defines\Notifications.hpp"
	};

class CfgTaskTypes
	{
		#include "defines\Tasks.hpp"
	};

	class CfgSounds
   {
   sounds[] = {Vent,Vent2,Para};

	class Vent {name="Vent";sound[]={ATM_airdrop\data\Vent.ogg,db-11,1.0};titles[] = {};};
	class Vent2 {name="Vent2";sound[]={ATM_airdrop\data\Vent2.ogg,db-11,1.0};titles[] = {};};
	class Para {name="Para";sound[]={ATM_airdrop\data\parachute.ogg,db-11,1.0};titles[] = {};};

    };

//------------------------- Parameters

class Params
	{

		class EmtpyLine1 {
		//--- paramsArray[0]
		title = "********** Revive Settings **********";
		values[]={0,0};
		texts[]={ "",""};
		default = 0;
		};

		class title1
		{
			title = "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Misc Settings ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";
			values[] = {0};
			texts[] = {""};
			default = 0;
		};
		class MainEnemyFaction {
			title = "Main Enemy Faction (Not Working Yet)";
			values[] = {1,2,3,4,5,6,7};
			texts[] = {"CSAT","CSAT Tropic","AAF","ParaMillitary","Bandits","FIA Independent","FIA Opfor"};
			default = 1;
		};

		class SecondaryEnemyFaction {
			title = "Secondary Enemy Faction (Not Working Yet)";
			values[] = {1,2,3,4,5,6,7};
			texts[] = {"CSAT","CSAT Tropic","AAF","ParaMillitary","Bandits","FIA Independent","FIA Opfor"};
			default = 3;
		};

		class VehicleRespawnDistance {
			title = "Distance from players that vehicles won't respawn";
			values[] = {10,50,100,200,300,400,500,1000,2000,5000,10000};
			texts[] = {"10m","50m","100m","200m","300m","400m","500m","1km","2km","5km","10km"};
			default = 500;
		};
		class ArtilleryTargetTickTimeMin {
			title = "MINIMUM Time between Priority Target actions";
			values[] = {30,60,120,180,240,300,600,900};
			texts[] = {"30 seconds","1 minute","2 minutes","3 minutes","4 minutes","5 minutes","10 minutes","15 minutes"};
			default = 180; // 120 default
		};

		class ArtilleryTargetTickTimeMax {
			title = "MAXIMUM Time between Priority Target actions";
			values[] = {30,60,120,180,240,300,600,900};
			texts[] = {"30 seconds","1 minute","2 minutes","3 minutes","4 minutes","5 minutes","10 minutes","15 minutes"};
			default = 600; // 300 default
		};

		class ArsenalFilter {
			title = "Filter mode of the arsenal";
			texts[] = {"Arsenal disabled", "Arsenal enabled but filtered", "Arsenal enabled"};
			values[] = {0, 1, 2};
			default = 0;
		};

		class Fatigue {
			title = "Enable Fatigue";
			texts[] = {"Yes","No"};
			values[] = {0, 1};
			default = 1;
		};

		class title2
		{
			title = "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ AO's ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";
			values[] = {0};
			texts[] = {""};
			default = 0;
		};

		class EnemyLeftThreshhold {
			title = "Enemy Left Threshold";
			values[] = {1,2,3,4,5,6,7,8,9,10,11,12,13};
			texts[] = {"1","2","3","4","5","6","7","8","9","10","11","12","13"};
			default = 9;
		};

		class AOSize {
			title = "Main AO Diameter";
			values[] = {200,300,400,500,600,700,800,900,1000};
			texts[] = {"200m","300m","400m","500m","600m","700m","800m","900m","1,000m"};
			default = 1000;
		};

		class AntiAirAmount {
			title = "Amount of AA vehicles on the main AO";
			values[] = {1, 2, 3, 4, 5, 6};
			texts[] = {"1", "2", "3", "4", "5", "6"};
			default = 3;
		};

		class MRAPAmount {
			title = "Amount of MRAPs on the main AO";
			values[] = {1, 2, 3, 4, 5, 6};
			texts[] = {"1", "2", "3", "4", "5", "6"};
			default = 3;
		};

		class RandomVehcsAmount {
			title = "Amount of random vehicles on the main AO";
			values[] = {1, 2, 3, 4, 5, 6};
			texts[] = {"1", "2", "3", "4", "5", "6"};
			default = 2;
		};

		class InfantryGroupsAmount {
			title = "Amount of infantry groups on the main AO";
			values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
			texts[] = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
			default = 8;
		};

		class AAGroupsAmount {
			title = "Amount of AA groups on the main AO";
			values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
			texts[] = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
			default = 3;
		};

		class ATGroupsAmount {
			title = "Amount of AT groups on the main AO";
			values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
			texts[] = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
			default = 3;
		};

		class title3
		{
			title = "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ AI Skill ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";
			values[] = {0};
			texts[] = {""};
			default = 0;
		};

		class AIAimingAccuracy {
			title = "AI aiming accuracy";
			values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
			texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
			default = 8;
		};

		class AIAimingShake {
			title = "AI aiming shake";
			values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
			texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
			default = 3;
		};

		class AIAimingSpeed {
			title = "AI aiming speed";
			values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
			texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
			default = 8;
		};

		class AISpotingDistance {
			title = "AI spotting distance";
			values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
			texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
			default = 10;
		};

		class AISpottingSpeed {
			title = "AI spotting speed";
			values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
			texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
			default = 10;
		};

		class AICourage {
			title = "AI courage";
			values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
			texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
			default = 10;
		};

		class AIReloadSpeed {
			title = "AI reload speed";
			values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
			texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
			default = 10;
		};

		class AICommandingSkill {
			title = "AI commanding skill";
			values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
			texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
			default = 10;
		};

		class AIGeneralSkill {
			title = "AI general skill";
			values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
			texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
			default = 10;
		};
	#include "\a3\Functions_F\Params\paramRevive.hpp"
	};
